<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zmsk.face.mapper.FaceAuthenticationInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zmsk.face.pojo.FaceAuthenticationInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="id_number" property="idNumber" jdbcType="VARCHAR" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="BIT" />
    <result column="organization_id" property="organizationId" jdbcType="INTEGER" />
    <result column="equipment_id" property="equipmentId" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="idcard_image" property="idcardImage" jdbcType="VARCHAR" />
    <result column="idcard_info" property="idcardInfo" jdbcType="VARCHAR" />
    <result column="similar_degree" property="similarDegree" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="INTEGER" />
    <result column="register_time" property="registerTime" jdbcType="INTEGER" />
    <result column="sign_office" property="signOffice" jdbcType="VARCHAR" />
    <result column="legal_date" property="legalDate" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, avatar, sex, id_number, nation, address, type, source, result, organization_id, 
    equipment_id, group_id, idcard_image, idcard_info, similar_degree, remark, ctime, register_time, sign_office, legal_date, birthday
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zmsk.face.pojo.FaceAuthenticationInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from face_authentication_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from face_authentication_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from face_authentication_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zmsk.face.pojo.FaceAuthenticationInfoExample" >
    delete from face_authentication_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zmsk.face.pojo.FaceAuthenticationInfo" >
    insert into face_authentication_info (id, name, avatar, 
      sex, id_number, nation, 
      address, type, source, 
      result, organization_id, equipment_id, 
      group_id, idcard_image, idcard_info, 
      similar_degree, remark, ctime, 
      register_time, sign_office, legal_date, birthday)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{sex,jdbcType=BIT}, #{idNumber,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, #{source,jdbcType=VARCHAR}, 
      #{result,jdbcType=BIT}, #{organizationId,jdbcType=INTEGER}, #{equipmentId,jdbcType=INTEGER}, 
      #{groupId,jdbcType=INTEGER}, #{idcardImage,jdbcType=VARCHAR}, #{idcardInfo,jdbcType=VARCHAR}, 
      #{similarDegree,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{ctime,jdbcType=INTEGER}, 
      #{registerTime,jdbcType=INTEGER}, #{signOffice,jdbcType=VARCHAR}, #{legalDate,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zmsk.face.pojo.FaceAuthenticationInfo" >
    insert into face_authentication_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="idNumber != null" >
        id_number,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="organizationId != null" >
        organization_id,
      </if>
      <if test="equipmentId != null" >
        equipment_id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="idcardImage != null" >
        idcard_image,
      </if>
      <if test="idcardInfo != null" >
        idcard_info,
      </if>
      <if test="similarDegree != null" >
        similar_degree,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="signOffice != null" >
        sign_office,
      </if>
      <if test="legalDate != null" >
        legal_date,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="idNumber != null" >
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=BIT},
      </if>
      <if test="organizationId != null" >
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="equipmentId != null" >
        #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="idcardImage != null" >
        #{idcardImage,jdbcType=VARCHAR},
      </if>
      <if test="idcardInfo != null" >
        #{idcardInfo,jdbcType=VARCHAR},
      </if>
      <if test="similarDegree != null" >
        #{similarDegree,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=INTEGER},
      </if>
      <if test="signOffice != null" >
        #{signOffice,jdbcType=VARCHAR},
      </if>
      <if test="legalDate != null" >
        #{legalDate,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zmsk.face.pojo.FaceAuthenticationInfoExample" resultType="java.lang.Integer" >
    select count(*) from face_authentication_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update face_authentication_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.idNumber != null" >
        id_number = #{record.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null" >
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=BIT},
      </if>
      <if test="record.organizationId != null" >
        organization_id = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentId != null" >
        equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.idcardImage != null" >
        idcard_image = #{record.idcardImage,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardInfo != null" >
        idcard_info = #{record.idcardInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.similarDegree != null" >
        similar_degree = #{record.similarDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=INTEGER},
      </if>
      <if test="record.registerTime != null" >
        register_time = #{record.registerTime,jdbcType=INTEGER},
      </if>
      <if test="record.signOffice != null" >
        sign_office = #{record.signOffice,jdbcType=VARCHAR},
      </if>
      <if test="record.legalDate != null" >
        legal_date = #{record.legalDate,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update face_authentication_info
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      id_number = #{record.idNumber,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=BIT},
      source = #{record.source,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=BIT},
      organization_id = #{record.organizationId,jdbcType=INTEGER},
      equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      idcard_image = #{record.idcardImage,jdbcType=VARCHAR},
      idcard_info = #{record.idcardInfo,jdbcType=VARCHAR},
      similar_degree = #{record.similarDegree,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=INTEGER},
      sign_office = #{record.registerTime,jdbcType=INTEGER},
      idcard_info = #{record.signOffice,jdbcType=VARCHAR},
      legal_date = #{record.legalDate,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zmsk.face.pojo.FaceAuthenticationInfo" >
    update face_authentication_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="idNumber != null" >
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=BIT},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=BIT},
      </if>
      <if test="organizationId != null" >
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="equipmentId != null" >
        equipment_id = #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="idcardImage != null" >
        idcard_image = #{idcardImage,jdbcType=VARCHAR},
      </if>
      <if test="idcardInfo != null" >
        idcard_info = #{idcardInfo,jdbcType=VARCHAR},
      </if>
      <if test="similarDegree != null" >
        similar_degree = #{similarDegree,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=INTEGER},
      </if>
      <if test="signOffice != null" >
        sign_office = #{signOffice,jdbcType=VARCHAR},
      </if>
      <if test="legalDate != null" >
        legal_date = #{legalDate,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zmsk.face.pojo.FaceAuthenticationInfo" >
    update face_authentication_info
    set name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      id_number = #{idNumber,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      source = #{source,jdbcType=VARCHAR},
      result = #{result,jdbcType=BIT},
      organization_id = #{organizationId,jdbcType=INTEGER},
      equipment_id = #{equipmentId,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      idcard_image = #{idcardImage,jdbcType=VARCHAR},
      idcard_info = #{idcardInfo,jdbcType=VARCHAR},
      similar_degree = #{similarDegree,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=INTEGER},
      register_time = #{registerTime,jdbcType=INTEGER},
      idcard_info = #{record.signOffice,jdbcType=VARCHAR},
      legal_date = #{record.legalDate,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>